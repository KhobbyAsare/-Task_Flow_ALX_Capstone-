openapi: 3.0.3
info:
  title: Task Flow Management API
  version: 1.0.0
  description: API for Task Flow Management, a web-based task management system.
paths:
  /api/{id}/:
    get:
      operationId: api_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetail'
          description: ''
  /api/{id}/delete/:
    delete:
      operationId: api_delete_destroy
      description: Delete a specific task for the authenticated user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/{id}/update/:
    put:
      operationId: api_update_update
      description: Update a specific task for the authenticated user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
          description: ''
    patch:
      operationId: api_update_partial_update
      description: Update a specific task for the authenticated user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
          description: ''
  /api/auth/login/:
    get:
      operationId: api_auth_login_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLogin'
          description: ''
    post:
      operationId: api_auth_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailLogin'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLogin'
          description: ''
  /api/auth/logout/:
    get:
      operationId: api_auth_logout_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_auth_logout_create
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/profile/:
    get:
      operationId: api_auth_profile_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: api_auth_profile_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: api_auth_profile_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/auth/register/:
    post:
      operationId: api_auth_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/auth/user-data/:
    get:
      operationId: api_auth_user_data_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'
          description: ''
  /api/auth/user-update/:
    put:
      operationId: api_auth_user_update_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    patch:
      operationId: api_auth_user_update_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
  /api/auth/web-logout/:
    get:
      operationId: api_auth_web_logout_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_auth_web_logout_create
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/bulk-update/:
    patch:
      operationId: api_bulk_update_partial_update
      description: Bulk update task completion status
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/categories/:
    get:
      operationId: api_categories_retrieve
      description: Get available task categories and their task counts
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/categories/{category}/:
    get:
      operationId: api_categories_list
      description: Get tasks grouped by specific category
      parameters:
      - in: path
        name: category
        schema:
          type: string
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/completed/:
    get:
      operationId: api_completed_list
      description: Get all completed tasks for the user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/create/:
    post:
      operationId: api_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCreate'
          description: ''
  /api/dashboard/:
    get:
      operationId: api_dashboard_retrieve
      description: Comprehensive task dashboard with organization metrics
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/list/:
    get:
      operationId: api_list_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/pending/:
    get:
      operationId: api_pending_list
      description: Get all pending (incomplete) tasks for the user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/priorities/:
    get:
      operationId: api_priorities_retrieve
      description: Get available task priorities and their task counts
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/priorities/{priority}/:
    get:
      operationId: api_priorities_list
      description: Get tasks grouped by specific priority level
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: priority
        schema:
          type: string
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/stats/:
    get:
      operationId: api_stats_retrieve
      description: Get task statistics for the authenticated user
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/tasks/api/{id}/:
    get:
      operationId: api_tasks_api_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetail'
          description: ''
  /api/tasks/api/{id}/delete/:
    delete:
      operationId: api_tasks_api_delete_destroy
      description: Delete a specific task for the authenticated user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/api/{id}/update/:
    put:
      operationId: api_tasks_api_update_update
      description: Update a specific task for the authenticated user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
          description: ''
    patch:
      operationId: api_tasks_api_update_partial_update
      description: Update a specific task for the authenticated user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
          description: ''
  /api/tasks/api/bulk-update/:
    patch:
      operationId: api_tasks_api_bulk_update_partial_update
      description: Bulk update task completion status
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/tasks/api/categories/:
    get:
      operationId: api_tasks_api_categories_retrieve
      description: Get available task categories and their task counts
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/tasks/api/categories/{category}/:
    get:
      operationId: api_tasks_api_categories_list
      description: Get tasks grouped by specific category
      parameters:
      - in: path
        name: category
        schema:
          type: string
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/tasks/api/completed/:
    get:
      operationId: api_tasks_api_completed_list
      description: Get all completed tasks for the user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/tasks/api/create/:
    post:
      operationId: api_tasks_api_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCreate'
          description: ''
  /api/tasks/api/dashboard/:
    get:
      operationId: api_tasks_api_dashboard_retrieve
      description: Comprehensive task dashboard with organization metrics
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/tasks/api/list/:
    get:
      operationId: api_tasks_api_list_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/tasks/api/pending/:
    get:
      operationId: api_tasks_api_pending_list
      description: Get all pending (incomplete) tasks for the user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/tasks/api/priorities/:
    get:
      operationId: api_tasks_api_priorities_retrieve
      description: Get available task priorities and their task counts
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/tasks/api/priorities/{priority}/:
    get:
      operationId: api_tasks_api_priorities_list
      description: Get tasks grouped by specific priority level
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: priority
        schema:
          type: string
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/tasks/api/stats/:
    get:
      operationId: api_tasks_api_stats_retrieve
      description: Get task statistics for the authenticated user
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/tasks/api/urgent/:
    get:
      operationId: api_tasks_api_urgent_list
      description: Get urgent tasks (HIGH priority and/or overdue)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /api/urgent/:
    get:
      operationId: api_urgent_list
      description: Get urgent tasks (HIGH priority and/or overdue)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /auth/login/:
    get:
      operationId: auth_login_retrieve
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLogin'
          description: ''
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailLogin'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLogin'
          description: ''
  /auth/logout/:
    get:
      operationId: auth_logout_retrieve
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /auth/profile/:
    get:
      operationId: auth_profile_retrieve
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: auth_profile_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: auth_profile_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /auth/register/:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /auth/user-data/:
    get:
      operationId: auth_user_data_retrieve
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'
          description: ''
  /auth/user-update/:
    put:
      operationId: auth_user_update_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    patch:
      operationId: auth_user_update_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
  /auth/web-logout/:
    get:
      operationId: auth_web_logout_retrieve
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: auth_web_logout_create
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    CategoryEnum:
      enum:
      - WORK
      - PERSONAL
      - FITNESS
      - SHOPPING
      - HEALTH
      - EDUCATION
      - FINANCE
      - OTHER
      type: string
      description: |-
        * `WORK` - Work
        * `PERSONAL` - Personal
        * `FITNESS` - Fitness
        * `SHOPPING` - Shopping
        * `HEALTH` - Health
        * `EDUCATION` - Education
        * `FINANCE` - Finance
        * `OTHER` - Other
    EmailLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    ExtendedUserProfile:
      type: object
      properties:
        bio:
          type: string
          nullable: true
          description: Brief description about yourself
          maxLength: 500
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        birth_date:
          type: string
          format: date
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 100
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        profile_picture:
          type: string
          format: uri
          nullable: true
        is_profile_public:
          type: boolean
          description: Allow others to view your profile
        show_email:
          type: boolean
          description: Show email address in public profile
    NullEnum:
      enum:
      - null
    PaginatedTaskListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskList'
    PatchedTaskUpdate:
      type: object
      description: Serializer for updating tasks
      properties:
        title:
          type: string
          description: Task title
          maxLength: 200
        description:
          type: string
          nullable: true
          description: Task description
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Task due date
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          description: |-
            Task priority level

            * `HIGH` - High
            * `MEDIUM` - Medium
            * `LOW` - Low
        category:
          nullable: true
          description: |-
            Default system category

            * `WORK` - Work
            * `PERSONAL` - Personal
            * `FITNESS` - Fitness
            * `SHOPPING` - Shopping
            * `HEALTH` - Health
            * `EDUCATION` - Education
            * `FINANCE` - Finance
            * `OTHER` - Other
          oneOf:
          - $ref: '#/components/schemas/CategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_completed:
          type: boolean
          description: Task completion status
    PatchedUserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
          readOnly: true
    PatchedUserUpdate:
      type: object
      properties:
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        bio:
          type: string
          maxLength: 500
        phone_number:
          type: string
          maxLength: 15
        birth_date:
          type: string
          format: date
          nullable: true
        location:
          type: string
          maxLength: 100
        website:
          type: string
          format: uri
        profile_picture:
          type: string
          format: uri
          nullable: true
        is_profile_public:
          type: boolean
        show_email:
          type: boolean
    PriorityEnum:
      enum:
      - HIGH
      - MEDIUM
      - LOW
      type: string
      description: |-
        * `HIGH` - High
        * `MEDIUM` - Medium
        * `LOW` - Low
    TaskCreate:
      type: object
      description: Serializer for creating new tasks
      properties:
        title:
          type: string
          description: Task title
          maxLength: 200
        description:
          type: string
          nullable: true
          description: Task description
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Task due date
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          description: |-
            Task priority level

            * `HIGH` - High
            * `MEDIUM` - Medium
            * `LOW` - Low
        category:
          nullable: true
          description: |-
            Default system category

            * `WORK` - Work
            * `PERSONAL` - Personal
            * `FITNESS` - Fitness
            * `SHOPPING` - Shopping
            * `HEALTH` - Health
            * `EDUCATION` - Education
            * `FINANCE` - Finance
            * `OTHER` - Other
          oneOf:
          - $ref: '#/components/schemas/CategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        custom_category:
          type: integer
          nullable: true
          description: Custom user-defined category
      required:
      - title
    TaskDetail:
      type: object
      description: Detailed serializer for retrieving single task
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Task title
          maxLength: 200
        description:
          type: string
          nullable: true
          description: Task description
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Task due date
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          description: |-
            Task priority level

            * `HIGH` - High
            * `MEDIUM` - Medium
            * `LOW` - Low
        category:
          nullable: true
          description: |-
            Default system category

            * `WORK` - Work
            * `PERSONAL` - Personal
            * `FITNESS` - Fitness
            * `SHOPPING` - Shopping
            * `HEALTH` - Health
            * `EDUCATION` - Education
            * `FINANCE` - Finance
            * `OTHER` - Other
          oneOf:
          - $ref: '#/components/schemas/CategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        custom_category:
          type: string
          readOnly: true
        effective_category:
          type: string
          readOnly: true
        is_completed:
          type: boolean
          description: Task completion status
        user:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        is_overdue:
          type: string
          readOnly: true
        days_until_due:
          type: string
          readOnly: true
      required:
      - created_at
      - custom_category
      - days_until_due
      - effective_category
      - id
      - is_overdue
      - title
      - updated_at
      - user
    TaskList:
      type: object
      description: Simplified serializer for listing tasks
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Task title
          maxLength: 200
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Task due date
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          description: |-
            Task priority level

            * `HIGH` - High
            * `MEDIUM` - Medium
            * `LOW` - Low
        category:
          nullable: true
          description: |-
            Default system category

            * `WORK` - Work
            * `PERSONAL` - Personal
            * `FITNESS` - Fitness
            * `SHOPPING` - Shopping
            * `HEALTH` - Health
            * `EDUCATION` - Education
            * `FINANCE` - Finance
            * `OTHER` - Other
          oneOf:
          - $ref: '#/components/schemas/CategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_completed:
          type: boolean
          description: Task completion status
        user:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
      required:
      - created_at
      - id
      - is_overdue
      - title
      - user
    TaskUpdate:
      type: object
      description: Serializer for updating tasks
      properties:
        title:
          type: string
          description: Task title
          maxLength: 200
        description:
          type: string
          nullable: true
          description: Task description
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Task due date
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          description: |-
            Task priority level

            * `HIGH` - High
            * `MEDIUM` - Medium
            * `LOW` - Low
        category:
          nullable: true
          description: |-
            Default system category

            * `WORK` - Work
            * `PERSONAL` - Personal
            * `FITNESS` - Fitness
            * `SHOPPING` - Shopping
            * `HEALTH` - Health
            * `EDUCATION` - Education
            * `FINANCE` - Finance
            * `OTHER` - Other
          oneOf:
          - $ref: '#/components/schemas/CategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_completed:
          type: boolean
          description: Task completion status
      required:
      - title
    UserData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        full_name:
          type: string
          readOnly: true
        profile_picture_url:
          type: string
          readOnly: true
        profile:
          allOf:
          - $ref: '#/components/schemas/ExtendedUserProfile'
          readOnly: true
      required:
      - date_joined
      - full_name
      - id
      - is_active
      - last_login
      - profile
      - profile_picture_url
      - username
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - id
      - username
    UserRegistration:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        password_confirm:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
      required:
      - email
      - first_name
      - last_name
      - password
      - password_confirm
      - username
    UserUpdate:
      type: object
      properties:
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        bio:
          type: string
          maxLength: 500
        phone_number:
          type: string
          maxLength: 15
        birth_date:
          type: string
          format: date
          nullable: true
        location:
          type: string
          maxLength: 100
        website:
          type: string
          format: uri
        profile_picture:
          type: string
          format: uri
          nullable: true
        is_profile_public:
          type: boolean
        show_email:
          type: boolean
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
